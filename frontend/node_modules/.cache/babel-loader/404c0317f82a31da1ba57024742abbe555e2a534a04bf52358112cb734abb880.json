{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\Kaliba\\\\starting-project-s23\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  searchParams.get('mode') || 'login';\n  if (mode !== 'login') {\n    throw json({\n      message: \"Unsupported mode.\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = fetch('http://locslhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-type': 'appliction/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.json === 422 || response.status === 401) {\n    return response;\n  }\n  if (response.ok) {\n    throw Js;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","get","mode","json","message","status","data","formData","authData","email","password","response","fetch","method","header","body","JSON","stringify","ok","Js","$RefreshReg$"],"sources":["C:/MERN/Kaliba/starting-project-s23/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  searchParams.get('mode') || 'login';\n\n  if(mode !== 'login') {\n    throw json({ message: \"Unsupported mode.\" }, { status: 422 });\n  }\n\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n\n  const response = fetch('http://locslhost:8080/'+mode, {\n    method: 'POST',\n    header: {\n      'Content-type':'appliction/json'\n    },\n    body: JSON.stringify(authData)\n  });\n\n  if(response.json === 422 || response.status === 401) {\n    return response;\n  }\n\n  if(response.ok) {\n    throw Js\n  }\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtDA,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEnC,IAAGC,IAAI,KAAK,OAAO,EAAE;IACnB,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAoB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/D;EAEA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACL,GAAG,CAAC,OAAO,CAAC;IACxBS,QAAQ,EAAEJ,IAAI,CAACL,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMU,QAAQ,GAAGC,KAAK,CAAC,wBAAwB,GAACV,IAAI,EAAE;IACpDW,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAGG,QAAQ,CAACR,IAAI,KAAK,GAAG,IAAIQ,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IACnD,OAAOM,QAAQ;EACjB;EAEA,IAAGA,QAAQ,CAACO,EAAE,EAAE;IACd,MAAMC,EAAE;EACV;AACF;AAAC,IAAAxB,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}